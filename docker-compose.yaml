version: "3.8"

services:

  mysql:
    image: mysql:5.7.38
    container_name: mysql
    ports:
      - "3307:3307"
    environment:
      - MYSQL_DATABASE=keycloak
      - MYSQL_USER=keycloak
      - MYSQL_PASSWORD=password
      - MYSQL_ROOT_PASSWORD=root_password
    healthcheck:
      test: "mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD}"

  keycloak:
    image: quay.io/keycloak/keycloak:18.0.0
    container_name: keycloak
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=mysql
      - KC_DB_URL_HOST=mysql
      - KC_DB_URL_DATABASE=keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=password
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_HTTP_ENABLED=true
    ports:
      - "8080:8080"
    command: start-dev
    depends_on:
      - mysql
    healthcheck:
      test: "curl -f http://localhost:8080/admin || exit 1"

  ms-discovery:
    build: ms-discovery
      dockerfile: Dokerfile
    container_name: ms-discovery
    restart: always
    depends_on:
      - keycloak
    ports:
      - "8761:8761"

  ms-config-server:
    build: ms-config-server
      dockerfile: Dokerfile
    container_name: ms-config-server
    restart: always
    depends_on:
      - ms-discovery
    ports:
      - "8888:8888"

#  ms-gateway:
#    build: ms-gateway
#      dockerfile: Dokerfile
#    container_name: ms-gateway
#    restart: always
#    depends_on:
#      - ms-config-server
#    ports:
#      - "8090:8090"
#
#  ms-users:
#    build: ms-users
#      dockerfile: Dokerfile
#    container_name: ms-users
#    restart: always
#    depends_on:
#      - bills-service
#    ports:
#      - "8084:8084"
#
#  ms-accounts:
#    build: ms-accounts
#      dockerfile: Dokerfile
#    container_name: ms-accounts
#    restart: always
#    depends_on:
#      - ms-users
#    ports:
#      - "8085:8085"

  accounts-db:
    image: mongo:4.4.2
    container_name: "accounts-db"
    restart: always
    environment:
      MONGO_INITDB_DATABASE: mongo-account-db
      MONGO_INITDB_ROOT_USERNAME: $${MONGO_USERNAME:accounts}
      MONGO_INITDB_ROOT_PASSWORD: $${MONGO_PASSWORD:1234}
    volumes:
#      - ./dbScript:/docker-entrypoint-initdb.d/mongo-serie-init.js:ro
      - ../mongo-account-volume:/data/db
    ports:
      - "27018:27017"
#  mongo-express-accounts:
#    image: mongo-express
#    container_name: "mongo-express-accounts"
#    restart: always
#    depends_on:
#      - accounts-db
#    environment:
#      - ME_CONFIG_MONGODB_SERVER: accounts-db
#      - ME_CONFIG_MONGODB_PORT: 27017
#      - ME_CONFIG_MONGODB_ADMINUSERNAME: $${MONGO_USERNAME:accounts}
#      - ME_CONFIG_MONGODB_ADMINPASSWORD: $${MONGO_PASSWORD:1234}
#    ports:
#      - "8081:8081"